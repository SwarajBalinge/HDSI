{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Cdac\\\\HDSI\\\\my-app\\\\src\\\\index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <BrowserRouter>\n//   <App />\n// </BrowserRouter>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Define ErrorBoundary class\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state to indicate that an error has occurred\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // Log error details for debugging\n    console.log(\"Error caught by ErrorBoundary: \", error);\n    console.log(\"Error info: \", errorInfo);\n  }\n  render() {\n    // Show fallback UI if error has been caught\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something went wrong. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n    return this.props.children; // If no error, render the children\n  }\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","jsxDEV","_jsxDEV","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById"],"sources":["D:/Project Cdac/HDSI/my-app/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from 'react-router-dom';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <BrowserRouter>\n//   <App />\n// </BrowserRouter>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Define ErrorBoundary class\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state to indicate that an error has occurred\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log error details for debugging\n    console.log(\"Error caught by ErrorBoundary: \", error);\n    console.log(\"Error info: \", errorInfo);\n  }\n\n  render() {\n    // Show fallback UI if error has been caught\n    if (this.state.hasError) {\n      return <h1>Something went wrong. Please try again later.</h1>;\n    }\n\n    return this.props.children; // If no error, render the children\n  }\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    {/* Wrap your App component inside the ErrorBoundary */}\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </BrowserRouter>\n);\n\nreportWebVitals();\n\n\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,SAASP,KAAK,CAACQ,SAAS,CAAC;EAC1CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EAEA,OAAOC,wBAAwBA,CAACC,KAAK,EAAE;IACrC;IACA,OAAO;MAAEF,QAAQ,EAAE;IAAK,CAAC;EAC3B;EAEAG,iBAAiBA,CAACD,KAAK,EAAEE,SAAS,EAAE;IAClC;IACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEJ,KAAK,CAAC;IACrDG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,SAAS,CAAC;EACxC;EAEAG,MAAMA,CAAA,EAAG;IACP;IACA,IAAI,IAAI,CAACR,KAAK,CAACC,QAAQ,EAAE;MACvB,oBAAON,OAAA;QAAAc,QAAA,EAAI;MAA6C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC/D;IAEA,OAAO,IAAI,CAACd,KAAK,CAACU,QAAQ,CAAC,CAAC;EAC9B;AACF;AAEA,MAAMK,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACN,MAAM,cACTb,OAAA,CAACF,aAAa;EAAAgB,QAAA,eAEZd,OAAA,CAACC,aAAa;IAAAa,QAAA,eACZd,OAAA,CAACJ,GAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACjB,CAAC;AAEDrB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}